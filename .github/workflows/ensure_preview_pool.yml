name: Ensure Preview Pool

on:
  repository_dispatch:
    types: [ensure-preview-pool]
  workflow_dispatch:

# Prevent concurrent runs with any preview pool operations to avoid state conflicts
concurrency:
  group: terraform-preview-pool-operations
  cancel-in-progress: false

jobs:
  ensure-preview-pool:
    name: Enable Preview Pool
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_wrapper: false  # Disable wrapper for better error handling
        
    - name: Terraform Init
      run: |
        echo "üîß Initializing Terraform..."
        terraform init
        echo "‚úÖ Terraform initialization completed"
        
    - name: Terraform Validate
      run: |
        echo "üîç Validating Terraform configuration..."
        terraform validate
        echo "‚úÖ Terraform configuration is valid"
      
    - name: Check Current Preview Pool State
      id: current-state
      run: |
        echo "üîç Checking current preview pool state..."
        set +e  # Don't exit on error
        
        terraform state list > state_resources.txt 2>/dev/null || true
        
        if grep -q "module.digital_ocean.digitalocean_kubernetes_node_pool.do_cluster_staging_pool" state_resources.txt; then
          echo "‚ÑπÔ∏è Preview pool found in state - checking if already enabled"
          
          # Get resource details to check if it's actually running
          RESOURCE_NAME=$(grep "module.digital_ocean.digitalocean_kubernetes_node_pool.do_cluster_staging_pool" state_resources.txt | head -1)
          terraform state show "$RESOURCE_NAME" > pool_details.txt 2>/dev/null || true
          
          if [ -s pool_details.txt ]; then
            NODE_COUNT=$(grep -E "actual_node_count\s*=" pool_details.txt | head -1 | sed 's/.*= //' | sed 's/[^0-9]//g')
            if [[ "$NODE_COUNT" -gt 0 ]]; then
              echo "‚úÖ Preview pool is already enabled with $NODE_COUNT nodes"
              echo "pool-enabled=true" >> $GITHUB_OUTPUT
            else
              echo "‚ö†Ô∏è Preview pool exists but has 0 nodes - needs enabling"
              echo "pool-enabled=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "pool-enabled=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "‚ÑπÔ∏è Preview pool not found in state - needs creation"
          echo "pool-enabled=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Terraform Plan - Enable Preview Pool
      if: steps.current-state.outputs.pool-enabled == 'false'
      run: |
        echo "üìã Terraform plan to enable preview pool:"
        terraform plan -var="enable_preview_pool=true" -no-color
      
    - name: Terraform Apply - Enable Preview Pool
      if: steps.current-state.outputs.pool-enabled == 'false'
      run: |
        echo "üöÄ Enabling preview pool..."
        echo "üí∞ This will incur ~$14/month in costs"
        
        terraform apply -auto-approve -var="enable_preview_pool=true"
        
        if [ $? -eq 0 ]; then
          echo "‚úÖ Preview pool successfully enabled"
          echo "üéØ Preview environment is now available for PR testing"
        else
          echo "‚ùå Failed to enable preview pool"
          exit 1
        fi
      
    - name: Already Enabled
      if: steps.current-state.outputs.pool-enabled == 'true'
      run: |
        echo "‚ÑπÔ∏è Preview pool is already enabled - no action needed"
        echo "üéØ Preview environment is ready for development"
        
    - name: Cleanup Temporary Files
      if: always()
      run: |
        echo "üßπ Cleaning up temporary files..."
        rm -f state_resources.txt pool_details.txt || true
        echo "‚úÖ Cleanup completed"
        
    - name: Workflow Summary
      if: always()
      run: |
        echo "## üìä Ensure Preview Pool Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Pool was enabled**: ${{ steps.current-state.outputs.pool-enabled }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Workflow status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.current-state.outputs.pool-enabled }}" == "false" ] && [ "${{ job.status }}" == "success" ]; then
          echo "- **Action taken**: üöÄ Successfully enabled preview pool (~$14/month cost)" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ steps.current-state.outputs.pool-enabled }}" == "true" ]; then
          echo "- **Action taken**: ‚ÑπÔ∏è No action needed - pool already enabled" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Action taken**: ‚ùå Failed to enable preview pool" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Notify Success
      if: success() && steps.current-state.outputs.pool-enabled == 'false'
      run: |
        echo "‚úÖ Preview pool has been successfully enabled"
        echo "Preview pool will be available in a few minutes"
        
    - name: Notify Failure
      if: failure()
      run: |
        echo "‚ùå Failed to enable preview pool"
        echo "Please check the logs and try again"
