name: Disable Preview Pool

on:
  repository_dispatch:
    types: [disable-preview-pool]
  workflow_dispatch:

# Prevent concurrent runs with preview pool operations to avoid state conflicts
concurrency:
  group: terraform-preview-pool-operations
  cancel-in-progress: false

jobs:
  disable-preview-pool:
    name: Disable Preview Pool
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_wrapper: false  # Disable wrapper for better error handling
        
    - name: Terraform Init
      run: |
        echo "üîß Initializing Terraform..."
        terraform init
        echo "‚úÖ Terraform initialization completed"
        
    - name: Terraform Validate
      run: |
        echo "üîç Validating Terraform configuration..."
        terraform validate
        echo "‚úÖ Terraform configuration is valid"
      
    - name: Check Current Preview Pool State
      id: current-state
      run: |
        echo "üîç Checking current preview pool state..."
        set +e  # Don't exit on error
        
        terraform state list > state_resources.txt 2>/dev/null || true
        
        if grep -q "module.digital_ocean.digitalocean_kubernetes_node_pool.do_cluster_staging_pool" state_resources.txt; then
          echo "‚úÖ Preview pool found in state - proceeding with disable"
          echo "pool-exists=true" >> $GITHUB_OUTPUT
        else
          echo "‚ÑπÔ∏è Preview pool not found in state - already disabled"
          echo "pool-exists=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Terraform Plan - Disable Preview Pool
      if: steps.current-state.outputs.pool-exists == 'true'
      run: |
        echo "üìã Terraform plan to disable preview pool:"
        terraform plan -var="enable_preview_pool=false" -no-color
      
    - name: Terraform Apply - Disable Preview Pool
      if: steps.current-state.outputs.pool-exists == 'true'
      run: |
        echo "üí∞ Disabling preview pool..."
        echo "üíµ This will save ~$14/month in costs"
        
        terraform apply -auto-approve -var="enable_preview_pool=false"
        
        if [ $? -eq 0 ]; then
          echo "‚úÖ Preview pool successfully disabled"
          echo "üí∞ Cost savings activated - preview resources destroyed"
        else
          echo "‚ùå Failed to disable preview pool"
          exit 1
        fi
      
    - name: Already Disabled
      if: steps.current-state.outputs.pool-exists == 'false'
      run: |
        echo "‚ÑπÔ∏è Preview pool is already disabled - no action needed"
        echo "üí∞ Cost optimization is already active"
        
    - name: Cleanup Temporary Files
      if: always()
      run: |
        echo "üßπ Cleaning up temporary files..."
        rm -f state_resources.txt || true
        echo "‚úÖ Cleanup completed"
        
    - name: Workflow Summary
      if: always()
      run: |
        echo "## üìä Disable Preview Pool Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Pool existed**: ${{ steps.current-state.outputs.pool-exists }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Workflow status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.current-state.outputs.pool-exists }}" == "true" ] && [ "${{ job.status }}" == "success" ]; then
          echo "- **Action taken**: üí∞ Successfully disabled preview pool (saving ~$14/month)" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ steps.current-state.outputs.pool-exists }}" == "false" ]; then
          echo "- **Action taken**: ‚ÑπÔ∏è No action needed - pool already disabled" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Action taken**: ‚ùå Failed to disable preview pool" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Notify Success
      if: success() && steps.current-state.outputs.pool-exists == 'true'
      run: |
        echo "‚úÖ Preview pool has been successfully disabled"
        echo "üí∞ Cost savings: ~$14/month"
        
    - name: Notify Failure
      if: failure()
      run: |
        echo "‚ùå Failed to disable preview pool"
        echo "Please check the logs and try again"
