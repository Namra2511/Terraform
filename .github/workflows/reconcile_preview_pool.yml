name: Reconcile Preview Pool

on:
  schedule:
    # Run every hour at minute 0
    - cron: '0 * * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  reconcile-preview-pool:
    name: Auto-manage Preview Pool
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Check Open PRs in App Repository
      id: check-prs
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            // Get open PRs from the flask-react-template repository
            const { data: prs } = await github.rest.pulls.list({
              owner: 'jalantechnologies',
              repo: 'flask-react-template',
              state: 'open'
            });
            
            // Filter out draft PRs
            const nonDraftPrs = prs.filter(pr => !pr.draft);
            const prCount = nonDraftPrs.length;
            
            console.log(`Found ${prCount} open non-draft PRs in flask-react-template`);
            
            // Log PR details for debugging
            nonDraftPrs.forEach(pr => {
              console.log(`- PR #${pr.number}: ${pr.title} (${pr.user.login})`);
            });
            
            // Set outputs
            core.setOutput('pr-count', prCount);
            core.setOutput('needs-preview-pool', prCount > 0 ? 'true' : 'false');
            
            return {
              prCount: prCount,
              needsPreviewPool: prCount > 0
            };
          } catch (error) {
            console.error('Error checking PRs:', error);
            core.setFailed(`Failed to check PRs: ${error.message}`);
          }
          
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        
    - name: Terraform Init
      run: terraform init
      
    - name: Detect current infrastructure state
      id: current-status
      run: |
        # Check actual infrastructure state using terraform
        # Variables are automatically loaded from Terraform Cloud workspace
        terraform plan \
          -var="enable_preview_pool=true" \
          -detailed-exitcode >/dev/null 2>&1 || true
        
        # Simple 0/1 toggle based on infrastructure state
        if [ $? -eq 0 ]; then
          echo "currently-enabled=1" >> $GITHUB_OUTPUT
        else
          echo "currently-enabled=0" >> $GITHUB_OUTPUT
        fi
        
    - name: Enable Preview Pool
      if: steps.check-prs.outputs.needs-preview-pool == 'true' && steps.current-status.outputs.currently-enabled == '0'
      run: |
        echo " Enabling preview pool - found ${{ steps.check-prs.outputs.pr-count }} open PRs"
        # Variables are automatically loaded from Terraform Cloud workspace
        terraform apply -auto-approve \
          -var="enable_preview_pool=true"
          
    - name: Disable Preview Pool
      if: steps.check-prs.outputs.needs-preview-pool == 'false' && steps.current-status.outputs.currently-enabled == '1'
      run: |
        echo " Disabling preview pool - no open PRs found"
        # Variables are automatically loaded from Terraform Cloud workspace
        terraform apply -auto-approve \
          -var="enable_preview_pool=false"
          
    - name: No Action Needed
      if: (steps.check-prs.outputs.needs-preview-pool == 'true' && steps.current-status.outputs.currently-enabled == '1') || (steps.check-prs.outputs.needs-preview-pool == 'false' && steps.current-status.outputs.currently-enabled == '0')
      run: |
        if [ "${{ steps.check-prs.outputs.needs-preview-pool }}" == "true" ]; then
          echo "✅ Preview pool already enabled - ${{ steps.check-prs.outputs.pr-count }} open PRs"
        else
          echo "✅ Preview pool already disabled - no open PRs"
        fi
